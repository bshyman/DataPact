<div x-data="routes" class="flex flex-col gap-y-2">
  <div class="flex justify-between">
    <div class="form-control w-1/3">
      <label class="label">
        <span class="label-text">Search</span>
      </label>
      <input x-model="searchTerm" @input.debounce="refreshList()" type="text" placeholder="Search by route, pathname, controller, action" class="input input-bordered w-24 md:w-auto"/>
    </div>
    <div class="form-control w-1/5">
      <div class="form-control w-full max-w-xs">
        <label class="label">
          <span class="label-text">Filter by controller</span>
          <span x-cloak x-show="controllerFilter" @click="controllerFilter = '';refreshList()" class="label-text-alt cursor-pointer">Clear</span>
        </label>
        <%= select_tag 'controller_filter', options_for_select(@controllers.uniq.compact.sort), prompt: 'Select one', class: 'select select-bordered', '@change': 'refreshList()', 'x-model':'controllerFilter' %>
      </div>
    </div>
  </div>
  <div id="routes-list" class="flex flex-col gap-y-2">
    <%= render partial: 'data_pact/routes/list', locals: { route_data: @routes } %>
  </div>
</div>

<script type="text/javascript" charset="utf-8">
  document.addEventListener('alpine:init', () => {
    Alpine.data('routes', () => ({
      searchTerm: '',
      controllerFilter: '',
      refreshList() {
        fetch("<%= routes_path %>?" + new URLSearchParams({controller_filter: this.controllerFilter, search_term: this.searchTerm}), {
          headers: {
            'accept': 'application/json'
          },
        })
          .then(response => response.json())
          .then(html => {
            console.log('success', html)
            document.querySelector('#routes-list').innerHTML = html.partial
          })
      },
      showRoute(e) {
        let string = e.dataset.route
        let regex = new RegExp(this.searchTerm, 'i')
        return regex.test(string)
      }
    }))
  })
</script>